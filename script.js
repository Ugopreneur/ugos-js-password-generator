// Array of special characters to be included in password
var specialCharacters = [
  '@',
  '%',
  '+',
  '\\',
  '/',
  "'",
  '!',
  '#',
  '$',
  '^',
  '?',
  ':',
  ',',
  ')',
  '(',
  '}',
  '{',
  ']',
  '[',
  '~',
  '-',
  '_',
  '.'
];

// Array of numeric characters to be included in password
var numericCharacters = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];

// Array of lowercase characters to be included in password
var lowerCasedCharacters = [
  'a',
  'b',
  'c',
  'd',
  'e',
  'f',
  'g',
  'h',
  'i',
  'j',
  'k',
  'l',
  'm',
  'n',
  'o',
  'p',
  'q',
  'r',
  's',
  't',
  'u',
  'v',
  'w',
  'x',
  'y',
  'z'
];

// Array of uppercase characters to be included in password
var upperCasedCharacters = [
  'A',
  'B',
  'C',
  'D',
  'E',
  'F',
  'G',
  'H',
  'I',
  'J',
  'K',
  'L',
  'M',
  'N',
  'O',
  'P',
  'Q',
  'R',
  'S',
  'T',
  'U',
  'V',
  'W',
  'X',
  'Y',
  'Z'
];

//Concatenates all the arrays of password character options into one long array
var allCharacters = specialCharacters.concat(numericCharacters, lowerCasedCharacters, upperCasedCharacters);

// Function to prompt user for password options
function getPasswordOptions() {

  // First, ask the user how long the password should be via a prompt
  figureInputted = prompt("How many characters would you like your password to contain?");

  // Collect the user's response and convert to an integer
  numberOfCharacters = parseInt(figureInputted);

  // Only run the random character generator if the user's number is between 10 and 64
  if (numberOfCharacters >= 10 && numberOfCharacters <= 64) {
    // continue with confirming special characters
    // then log it for whn password will be generated
  }

  // what to do if user input is not a number between 10 and 64
  else {
    if (numberOfCharacters < 10) {
      // "Password length must be at least 10 characters, but not more than 64"
    }
    else if (numberOfCharacters > 64) {
      // "Password length must be no more than 64 characters, but at least 10"
    }
    else {
      // "Invalid input! Please enter a number between 10 and 64"
    }
  }
  

  // Select character type choices
  confirm("Click OK if you would like to include special characters.");
  // if OK, put TRUE to specialCharacterChoice variable , if Cancel, dont include

  confirm("click OK if you would like to include numeric characters.");
  // if OK, put TRUE to numericChoice variable  , if Cancel, dont include

  confirm("click OK if you would like to include lowercase characters.");
  // if OK, put TRUE to lowercaseChoice variable   , if Cancel, dont include

  confirm("click OK if you would like to include uppercase characters.");
  // if OK, put TRUE to uppercaseChoice variable   , if Cancel, dont include

  // return user choices in an array
}

// Function for getting a random element from an array ... 
function getRandom(arr) {
  // first, create an empty string called "password"
  var password = "";
  // this loop generates a random index number, based on the length of the chars string, and then adds the character at that index to the "password" string
  for (var i = 0; i < numberOfCharacters.value; i++) {
    var randomIndex = Math.floor(Math.random() * chars.length); //chars is absent here. It is a variable that holds a long string to point of characters to choose from
    password += chars[randomIndex];
  }

  return password;
}
  // use user choices from the array generated by getPasswordOptions() to randomly select characters?
  // Use math.floor and/or with math.random here? There are activites from prechristmas that do exactly this
  // return password


// Function to generate password with user input
function generatePassword() {
  // Collect the users choices by running the getPasswordOptions() function
  // If all 4 are false, then say "Sorry, generator failed! You must select atleast one charcter type" BUT ??? HOWWWWW???
  // If at least one is true, Then generate password based on their choices ...
  // shoudl return a variable passwordText at the end
  alert("Great! View your new password below.");
}

// Get references to the #generate element
var generateBtn = document.querySelector('#generate');

// Write password to the #password input
function writePassword() {
  var password = generatePassword();
  var passwordText = document.querySelector('#password');

  passwordText.value = password;
}

// Add event listener to generate button
generateBtn.addEventListener('click', writePassword);